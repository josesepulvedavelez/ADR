@page "/"

<h3 style="text-align: center;">Adquisiciones</h3>

<RadzenDialog />
<RadzenNotification />

@if (_lstAdquisicionModel == null)
{
    <div class="d-flex justify-content-center">
        <RadzenProgressBarCircular ShowValue="true" Mode="ProgressBarMode.Indeterminate" Size="ProgressBarCircularSize.Large">
            <Template>Wait</Template>
        </RadzenProgressBarCircular>
    </div>
}
else
{
     <div class="container">
        <button type="button" @onclick="(()=> Crear())" class="btn btn-success">
            <span class="oi oi-plus" aria-hidden="true"></span>
        </button>

         <br />
         <br />

         <div class="row">
            <div class="col-sm-12 text-left">
                <RadzenDataGrid AllowFiltering="true" AllowColumnResize="true" PageSize="10" AllowPaging="true" FilterMode="FilterMode.Advanced" AllowSorting="true"
                                Data="_lstAdquisicionModel" TItem="Models.AdquisicionModel" ColumnWidth="150px"
                                LogicalFilterOperator="LogicalFilterOperator.Or" EmptyText="No se encontraron registros.">
                    <Columns>
                        <RadzenDataGridColumn TItem="AdquisicionModel" Property="Presupuesto" Title="Presupuesto">
                            <Template Context="data">
                                $@string.Format("{0:N2}", data.Presupuesto)
                            </Template>
                        </RadzenDataGridColumn>
                        <RadzenDataGridColumn TItem="AdquisicionModel" Property="Unidad" Title="Unidad" />
                        <RadzenDataGridColumn TItem="AdquisicionModel" Property="TipoBien" Title="TipoBien" />
                        <RadzenDataGridColumn TItem="AdquisicionModel" Property="Cantidad" Title="Cantidad" />
                        <RadzenDataGridColumn TItem="AdquisicionModel" Property="ValorUnitario" Title="ValorUnitario">
                            <Template Context="data">
                                $@string.Format("{0:N2}", data.ValorUnitario)
                            </Template>
                        </RadzenDataGridColumn>
                        <RadzenDataGridColumn TItem="AdquisicionModel" Property="ValorTotal" Title="ValorTotal">
                            <Template Context="data">
                                $@string.Format("{0:N2}", data.ValorTotal)
                            </Template>
                        </RadzenDataGridColumn>                        
                        <RadzenDataGridColumn TItem="AdquisicionModel" Property="FechaAdquisicion" Title="FechaAdquisicion">
                            <Template Context="adquisicionModel">
                                @string.Format("{0:dd/MM/yyyy}", adquisicionModel.FechaAdquisicion)
                            </Template>
                        </RadzenDataGridColumn>
                        <RadzenDataGridColumn TItem="AdquisicionModel" Property="Proveedor" Title="Proveedor" />
                        <RadzenDataGridColumn TItem="AdquisicionModel" Property="Documentacion" Title="Documentacion" />

                        <RadzenDataGridColumn TItem="AdquisicionModel" Property="AdquisicionId" Title="Acciones">
                            <Template Context="data">
                                <button type="button" @onclick="(()=>Modificar(data.AdquisicionId))" class="btn btn-info">
                                    <span class="oi oi-pencil" aria-hidden="true"></span>
                                </button>
                            </Template>
                        </RadzenDataGridColumn>
                    </Columns>
                </RadzenDataGrid>
            </div>
         </div>

     </div>
}

@code {
    List<AdquisicionModel> _lstAdquisicionModel;

    protected override async Task OnInitializedAsync()
    {
        DialogService.OnClose += Close;
        await Consultar();
    }

    protected async Task Consultar()
    {
        var response = await _http.GetFromJsonAsync<List<AdquisicionModel>>("Api/Adquisiciones/Consultar");

        if (response != null)
        {
            _lstAdquisicionModel = response;
        }

        StateHasChanged();
    }

    void Close(dynamic result)
    {
        Task.Run(() => Consultar());
    }

    private async Task Crear()
    {
        await DialogService.OpenAsync<AdquisicionCrear>($"Crear Adquisicion",
            new Dictionary<string, object>() { },
            new DialogOptions() { Width = "700px", Height = "570px", Resizable = true });
    }

    private async Task Modificar(int id)
    {
        await DialogService.OpenAsync<AdquisicionModificar>($"Actualizar Adquisicion",
           new Dictionary<string, object>() { { "Id", id } },
           new DialogOptions() { Width = "700px", Height = "570px", Resizable = true });
    }
}
